{
    "openapi": "3.0.1",
    "info": {
        "title": "Search ABCo Confluence",
        "description": "Searches and retrieves content from ABCo's Confluence spaces",
        "termsOfService": "https://atlassian.com/terms/",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://robin661989.atlassian.net"
        }
    ],
    "paths": {
        "/wiki/rest/api/content/search": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Search content by CQL",
                "description": "Returns the list of content that matches a Confluence Query Language\n(CQL) query. For information on CQL, see:\n[Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\nExample initial call:\n```\n/wiki/rest/api/content/search?cql=type=page&limit=25\n```\n\nExample response:\n```\n{\n  \"results\": [\n    { ... },\n    { ... },\n    ...\n    { ... }\n  ],\n  \"limit\": 25,\n  \"size\": 25,\n  ...\n  \"_links\": {\n    \"base\": \"<url>\",\n    \"context\": \"<url>\",\n    \"next\": \"/rest/api/content/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\",\n    \"self\": \"<url>\"\n  }\n}\n```\n\nWhen additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of results returned in each call.\nExample subsequent call (taken from example response):\n```\n/wiki/rest/api/content/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\n```\nThe response to this will have a `prev` URL similar to the `next` in the example response.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.",
                "operationId": "searchContentByCQL",
                "parameters": [
                    {
                        "name": "cql",
                        "in": "query",
                        "description": "The CQL string that is used to find the requested content.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cqlcontext",
                        "in": "query",
                        "description": "The space, content, and content status to execute the search against.\nSpecify this as an object with the following properties:\n\n- `spaceKey` Key of the space to search against. Optional.\n- `contentId` ID of the content to search against. Optional. Must\nbe in the space spacified by `spaceKey`.\n- `contentStatuses` Content statuses to search against. Optional.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/contentExpand"
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pointer to a set of search results, returned as part of the `next` or `prev` URL from the previous search call.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of content objects to return per page.\nNote, this may be restricted by fixed system limits.",
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned if the requested list of content is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned if the CQL is invalid or missing.",
                        "content": {}
                    },
                    "401": {
                        "description": "Returned if the authentication credentials are incorrect or missing\nfrom the request.",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "oAuthDefinitions": [
                            "search:confluence"
                        ]
                    }
                ],
                "x-atlassian-oauth2-scopes": [
                    {
                        "scheme": "oAuthDefinitions",
                        "state": "Current",
                        "scopes": [
                            "search:confluence"
                        ]
                    },
                    {
                        "scheme": "oAuthDefinitions",
                        "state": "Beta",
                        "scopes": [
                            "read:content-details:confluence"
                        ]
                    }
                ],
                "x-atlassian-data-security-policy": [
                    {
                        "app-access-rule-exempt": false
                    }
                ],
                "x-atlassian-connect-scope": "READ"
            }
        }
    }
}
